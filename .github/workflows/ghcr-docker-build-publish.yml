name: Build and publish Docker image on ghcr.io (nightly builds and new releases)

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

on:
  schedule:
    - cron: '15 9 * * *'
  push:
    # Publish semver tags as releases.
    tags: [ '*.*.*' ]

env:
  # Use docker.io for Docker Hub if empty
  # GitHub Container Registry (ghcr.io)
  REGISTRY_HOST: ghcr.io
  # github.repository as <account>/<repo>
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:

      # Checkout a repository under $GITHUB_WORKSPACE, so the workflow can access it.
      # https://github.com/marketplace/actions/checkout
      - 
        name: Checkout repository
        uses: actions/checkout@v3
        with:
          # Repository name with owner. For example, actions/checkout.
          # Default: ${{ github.repository }}
          repository: '${{ github.repository }}'
          # The branch, tag or SHA to checkout. When checking out the repository that
          # triggered a workflow, this defaults to the reference or SHA for that event.
          # Otherwise, uses the default branch.
          ref: 'main'

      # Extract metadata from Git reference and GitHub events for Docker.
      # https://github.com/marketplace/actions/docker-metadata-action
      - 
        name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@v4
        with:
          # Define (a list of) Docker images to use as base name for tags.
          images: ${{ env.REGISTRY_HOST }}/${{ env.IMAGE_NAME }}

      # Login against a Docker registry.
      # https://github.com/marketplace/actions/docker-login
      - 
        name: Log into registry ${{ env.REGISTRY_HOST }}
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY_HOST }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # Create and boot a builder that can be used in the following steps of the workflow 
      # if using buildx.
      # https://github.com/marketplace/actions/docker-setup-buildx
      - 
        name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v2

      # Build and push Docker image with Buildx with full support of the features 
      # provided by Moby BuildKit builder toolkit.
      # https://github.com/marketplace/actions/build-and-push-docker-images
      - 
        name: Build image for testing
        uses: docker/build-push-action@v3
        with:
          context: .
          load: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

      # Add some additional checks to help secure Docker image.
      # https://github.com/marketplace/actions/container-image-scan
      -
        name: Scan image
        uses: azure/container-scan@v0.1
        with:
          image-name: ${{ steps.meta.outputs.tags }}

      - 
        name: Build and push image to Docker registry
        uses: docker/build-push-action@v3
        with:
          context: .
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
